"use strict";(self.webpackChunkwiki_blog=self.webpackChunkwiki_blog||[]).push([[450],{6029:function(n){n.exports=JSON.parse('{"blogPosts":[{"id":"isNaN-vs-Number.isNaN","metadata":{"permalink":"/isNaN-vs-Number.isNaN","editUrl":"https://github.com/streltsov/blog/edit/main/website/blog/blog/21-12-06-isNaN-vs-Number-isNaN.md","source":"@site/blog/21-12-06-isNaN-vs-Number-isNaN.md","title":"\u0420\u0430\u0437\u043d\u0438\u0446\u0430 \u043c\u0435\u0436\u0434\u0443 isNaN \u0438 Number.isNaN","description":"ADD DESCRIPTION","date":"2021-12-09T15:22:02.735Z","formattedDate":"December 9, 2021","tags":[{"label":"JavaScript","permalink":"/tags/java-script"},{"label":"wtfjs","permalink":"/tags/wtfjs"}],"readingTime":3.51,"truncated":false,"authors":[]},"content":"\x3c!--\\n     TODO:\\n     2. Find out why bigint and symbol throws an error on converting it to number\\n     3. Find out why NaN is of type number\\n    \\n     Links: https://dev.to/mang0088/isnan-vs-numberisnan-5e01\\n\\n## \u0427\u0442\u043e \u0442\u0430\u043a\u043e\u0435 NaN\\n\\n**NaN (Not-A-Number)**\\n\\n**NaN** \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u044f\u0432\u0438\u0442\u0441\u044f \u0432 \u043a\u043e\u0434\u0435 \u0432 \u0441\u043b\u0443\u0447\u0430\u044f\u0445 \u043a\u043e\u0433\u0434\u0430:\\n - \u0427\u0438\u0441\u043b\u043e \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0440\u0430\u0441\u043f\u0430\u0440\u0441\u0438\u0442\u044c, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 `parseInt(\\"Helluva\\")` \u0438\u043b\u0438 `Number(undefined)`\\n - \u041e\u0434\u0438\u043d \u0438\u0437 \u043e\u043f\u0435\u0440\u0430\u043d\u0434\u043e\u0432 \u0440\u0430\u0432\u043d\u044f\u0435\u0442\u0441\u044f **NaN**, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 `12 + NaN` \u0438\u043b\u0438 `42 * NaN`\\n - \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043c\u0435\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0447\u0438\u0441\u043b\u043e\u043ca, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 `Math.sqrt(-1)`\\n - `0 * Infinity` \u0438\u043b\u0438 `undefined + undefined`\\n - \u041e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0441\u043e \u0441\u0442\u0440\u043e\u043a\u043e\u0439 \u043a\u0440\u043e\u043c\u0435 \u0441\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 `\\"helluva\\" / 2` \\n\\nOrigin of NaN values:\\n\\nNaN values are generated when arithmetic operations result in undefined or unrepresentable values. Such values do not necessarily represent overflow conditions. A NaN also results from attempted coercion to numeric values of non-numeric values for which no primitive numeric value is available.\\n--\x3e\\n\\n\\n**TL;DR:** \u041e\u0442\u043b\u0438\u0447\u0438\u0435 **isNaN** \u043e\u0442 **Number.isNaN** \u0432 \u0442\u043e\u043c, \u0447\u0442\u043e \u043f\u0435\u0440\u0435\u0434 \u0442\u0435\u043c \u043a\u0430\u043a\\n\u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0430 `NaN`, \u0444\u0443\u043d\u043a\u0446\u0438\u044f **isNaN** , \u043d\u0435\u044f\u0432\u043d\u043e \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0439\\n\u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u043a \u0442\u0438\u043f\u0443 `number`, \u0430 \u043c\u0435\u0442\u043e\u0434 **Number.isNaN** \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438\\n\u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u0442\u0438\u043f\u043e\u043c `number`\\n\\n## isNaN\\n\u041d\u0430\u0432\u0435\u0440\u043d\u044f\u043a\u0430 \u043d\u0430\u0439\u0434\u0435\u0442\u0441\u044f \u0441\u043b\u0443\u0447\u0430\u0439 \u0433\u0434\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u044f **isNaN** \u043f\u0440\u0438\u0434\u0435\u0442\u0441\u044f \u043a\u0441\u0442\u0430\u0442\u0438 \u0438 \u0431\u0443\u0434\u0435\u0442 \u043f\u043e\u043b\u0435\u0437\u043d\u0430, \u043d\u043e \u0441\u0440\u0430\u0437\u0443 \u0432\\n\u0433\u043e\u043b\u043e\u0432\u0443 \u0442\u0430\u043a\u043e\u0439 \u043d\u0435 \u043f\u0440\u0438\u0434\u0435\u0442.\\n\\n\u0418 \u043e\u043d\u0430 \u0432\u0440\u043e\u0434\u0435 \u0431\u044b \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442, \u0435\u0441\u043b\u0438 \u0432 \u043d\u0435\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c `NaN`, \u0441\u0442\u0440\u043e\u043a\u0443 \u0438\u043b\u0438 \u043e\u0431\u044a\u0435\u043a\u0442, \u043e\u043d\u0430 \u0432\u0435\u0440\u043d\u0435\u0442 `true`:\\n\\n```js\\nisNaN(NaN);          // -> true\\nisNaN(undefined);    // -> true\\nisNaN(\\"JavaScript\\"); // -> true\\nisNaN({a: 1});       // -> true\\nisNaN([]);           // -> true\\n```\\n\\n\u0410 \u0435\u0441\u043b\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0447\u0438\u0441\u043b\u043e, \u043e\u043d\u0430 \u0437\u0430\u043a\u043e\u043d\u043e\u043c\u0435\u0440\u043d\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `false`:\\n\\n```js\\nisNaN(42); // -> false\\nisNaN(0);  // -> false\\n```\\n\\n\u041d\u043e, \u043d\u0435 \u0432\u0441\u0435 \u0442\u0430\u043a \u043f\u0440\u043e\u0441\u0442\u043e.\\n\\n**isNaN** \u043f\u043e \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u043c\u0443 \u0434\u0436\u0430\u0432\u0430\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f, \u0443 \u043d\u0435\u0435 \u0435\u0441\u0442\u044c \u043f\u0440\u0438\u043d\u0446\u0438\u043f\u044b \u0438 \u043e\u043d\u0430 \u0441\u043b\u0435\u0434\u0443\u0435\u0442\\n*JavaScript Way*.\\n\\n\u041f\u043e\u044d\u0442\u043e\u043c\u0443, \u043f\u0435\u0440\u0432\u044b\u043c \u0434\u0435\u043b\u043e\u043c \u043e\u043d\u0430 *\u043d\u0435\u044f\u0432\u043d\u043e* \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u0435 \u0432 \u043d\u0435\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043a \u0442\u0438\u043f\u0443\\n`number`, \u0438 \u0442\u0435\u043f\u0435\u0440\u044c \u0431\u0443\u043b\u0435\u0432\u044b \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u043f\u0443\u0441\u0442\u044b\u0435 \u0441\u0442\u0440\u043e\u043a\u0438, \u0441\u0442\u0440\u043e\u043a\u0438 \u0441 \u043f\u0440\u043e\u0431\u0435\u043b\u0430\u043c\u0438 \u0438\\n\u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u044b \u0434\u043b\u044f \u043d\u0435\u0435 \u0442\u043e\u0436\u0435 `number`:\\n\\n```js\\nisNaN([\\"1\\"]); // -> false\\nisNaN(true);  // -> false\\nisNaN(\'  \');  // -> false\\nisNaN(\'\');    // -> false\\n```\\n\\n\u0414\u0430, \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u0435\u0441\u043b\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0435 \u0432\u044b\u0448\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043a \u0442\u0438\u043f\u0443 `number`, \u043e\u043d\u0438 \u0432\\n\u0441\u0430\u043c\u043e\u043c \u0434\u0435\u043b\u0435 \u0441\u0442\u0430\u043d\u0443\u0442 \u0447\u0438\u0441\u043b\u0430\u043c\u0438. \u041f\u0435\u0440\u0432\u044b\u0435 \u0434\u0432\u0430 \u0435\u0434\u0438\u043d\u0438\u0446\u0430\u043c\u0438, \u0430 \u0432\u0442\u043e\u0440\u044b\u0435 \u0434\u0432\u0430 \u043d\u0443\u043b\u044f\u043c\u0438.\\n\\n\u0411\u043e\u043b\u0435\u0435 \u0442\u043e\u0433\u043e, \u0435\u0441\u043b\u0438 \u0432 **isNaN** \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0442\u0438\u043f `symbol` \u0438\u043b\u0438 `bigint`, \u0442\u043e \u043e\u043d\u0430 \u0432\u044b\u043a\u0438\u043d\u0435\u0442 \u043e\u0448\u0438\u0431\u043a\u0443:\\n\\n![TypeError \u043f\u0440\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0435 \u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u044e isNaN \u0442\u0438\u043f\u043e\u0432 symbol \u0438 bigint](/img/isNaN-vs-Number-isNaN/type-error.jpg)\\n\\n\u0412\u043e \u0432\u0441\u0435\u0445 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0445 \u0441\u043b\u0443\u0447\u0430\u044f\u0445 **isNaN** \u0432\u0435\u0440\u043d\u0435\u0442 `false`.\\n\\n\x3c!--\\n```js\\nisNaN([\\"1\\"]); // -> false\\nisNaN(true);  // -> false\\nisNaN(\'  \');  // -> false\\nisNaN(\'\');    // -> false\\n```\\n--\x3e\\n\u0422\u0430\u043a \u043a\u0430\u043a `NaN` \u043d\u0435 \u0440\u0430\u0432\u0435\u043d \u0441\u0430\u043c\u043e\u043c\u0443 \u0441\u0435\u0431\u0435, \u0442\u043e \u0434\u043e ES2015, \u043d\u0430\u0434\u0435\u0436\u043d\u044b\u043c \u0441\u043f\u043e\u0441\u043e\u0431\u043e\u043c \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043d\u0430\\n`NaN` \u0431\u044b\u043b\u043e \u0441\u0440\u0430\u0432\u043d\u0438\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441 \u0441\u0430\u043c\u0438\u043c \u0441\u043e\u0431\u043e\u0439:\\n\\n```js\\nconst value = NaN;\\nvalue == value; // -> false\\n```\\n\\n\u0414\u043b\u044f \u0442\u043e\u0433\u043e \u0447\u0442\u043e\u0431\u044b \u043d\u0435 \u043d\u0430\u043f\u0440\u044f\u0433\u0430\u0442\u044c \u043f\u043e\u043f\u0443\u0441\u0442\u0443 \u043c\u043e\u0437\u0433\u0438 \u0432\u0441\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u043c\u0438 \u0438\u0441\u0445\u043e\u0434\u0430\u043c\u0438 \u0432\u044b\u0437\u043e\u0432\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u0438\\n**isNaN**, \u043c\u043e\u0436\u043d\u043e \u0432\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043f\u043e\u043d\u044f\u0442\u043d\u044b\u043c \u0438 \u043d\u0430\u0434\u0435\u0436\u043d\u044b\u043c \u043c\u0435\u0442\u043e\u0434\u043e\u043c **Number.isNaN**,\\n\u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u044f\u0432\u0438\u043b\u0441\u044f \u0432 ES2015.\\n\\n## Number.isNaN\\n\\nC **Number.isNaN** \u0432\u0441\u0435 \u043d\u0430\u043c\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u0449\u0435.\\n\\n\u041f\u0440\u043e \u044d\u0442\u043e\u0442 \u043c\u0435\u0442\u043e\u0434, \u0432 \u043e\u0442\u043b\u0438\u0447\u0438\u0435 \u043e\u0442 **isNaN**, \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043c\u043e\u0436\u043d\u043e \u0441\u043a\u0430\u0437\u0430\u0442\u044c, \u0447\u0442\u043e \u043e\u043d\u0430\\n\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0431\u044b\u043b\u043e \u043b\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043e \u0432 \u043d\u0435\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `NaN` \u0438\u043b\u0438 \u043d\u0435\u0442. \u041e\u043d\u0430 \u043e\u0436\u0438\u0434\u0430\u0435\u043c\u043e\\n\u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `true` \u0435\u0441\u043b\u0438 \u0432 \u043d\u0435\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c `NaN` \u0438 `false` \u0432\u043e \u0432\u0441\u0435\u0445 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0445\\n\u0441\u043b\u0443\u0447\u0430\u044f\u0445:\\n\\n```js\\nNumber.isNaN(NaN);          // -> true\\n\\nNumber.isNaN(42);           // -> false\\nNumber.isNaN(BigInt(42));   // -> false\\nNumber.isNaN(\\"JavaScript\\"); // -> false\\nNumber.isNaN([1, 2, 3]);    // -> false\\nNumber.isNaN(undefined);    // -> false\\nNumber.isNaN(null);         // -> false\\nNumber.isNaN(Symbol());     // -> false\\n```\\n\\n\u041f\u043e\u0434 \u043a\u0430\u043f\u043e\u0442\u043e\u043c **Number.isNaN** \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u0447\u0438\u0441\u043b\u043e\u043c, \u0438\\n\u0435\u0441\u043b\u0438 \u043d\u0435\u0442, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `false`, \u0430 \u0435\u0441\u043b\u0438 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f, \u0442\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u043e\u043d\u043e\\n`NaN` \u0438 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `true` \u0438\u043b\u0438 `false`.\\n\\n\u041f\u043e\u043d\u0430\u0447\u0430\u043b\u0443, \u043f\u043e\u043a\u0430 \u044f \u043d\u0435 \u0440\u0430\u0437\u043e\u0431\u0440\u0430\u043b\u0441\u044f \u0438 \u043d\u0435 \u043a\u043e\u043f\u043d\u0443\u043b \u043f\u043e\u0433\u043b\u0443\u0431\u0436\u0435, \u043c\u043d\u0435 \u043f\u043e\u043a\u0430\u0437\u0430\u043b\u043e\u0441\u044c, \u0447\u0442\u043e \u043c\u0435\u0442\u043e\u0434\\n**Number.isNaN** \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0438\u043c\u0435\u043d\u043d\u043e \u043d\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `NaN`, \u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f **isNaN**\\n\u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043d\u0430 \u0442\u043e, \u0447\u0442\u043e\u0431\u044b \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0435 \u044f\u0432\u043b\u044f\u043b\u043e\u0441\u044c \u0447\u0438\u0441\u043b\u043e\u043c, \u043d\u0435 \u0442\u0438\u043f\u043e\u043c `number`, \u0430 \u0438\u043c\u0435\u043d\u043d\u043e\\n\u0447\u0438\u0441\u043b\u043e\u043c, \u043d\u043e \u044f \u043e\u0448\u0438\u0431\u0430\u043b\u0441\u044f.\\n\\n## \u041f\u0440\u043e\u0432\u0435\u0440\u044c \u0441\u0435\u0431\u044f\\n\\n```js\\nconst name = \'Lydia Hallie\';\\nconst age = 21;\\n\\nconsole.log(Number.isNaN(name));\\nconsole.log(Number.isNaN(age));\\n\\nconsole.log(isNaN(name));\\nconsole.log(isNaN(age));\\n```\\n\\n<details>\\n  <summary>\u041e\u0442\u0432\u0435\u0442</summary>\\n\\n`false`, `false`, `true`, `false`\\n\\n\x3c!---\\nWith the Number.isNaN method, you can check if the value you pass is a numeric value and equal to NaN. name is not a numeric value, so Number.isNaN(name) returns false. age is a numeric value, but is not equal to NaN, so Number.isNaN(age) returns false.\\n\\nWith the isNaN method, you can check if the value you pass is not a number. name is not a number, so isNaN(name) returns true. age is a number, so isNaN(age) returns false.\\n---\x3e\\n</details>"}]}')}}]);